---

# s3, git, time, github-release, registry-image,
# pool - serialize access to external systems
# git - can also push
resources:
  - name: 24h
    type: time
    source: {interval: 24h}

  - name: istio-installer #DO NOT SET TO FORK - for testing use another pipeline and pause this one
    type: git
    source:
      uri: "https://github.com/istio/istio-installer"

  - name: istio-master
    type: git
    source:
      uri: "https://github.com/istio/istio"
      branch: master

jobs:
  - name: install
    serial_groups: [ cluster ]
    plan:
    - get: 24h
      trigger: true
    - get: istio-installer
      trigger: true
  
    - task: log-used-repo
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ecx
          - |
            cd istio-installer
            git remote -v
            git branch

    - task: install-master
      params:
        KUBECONFIG: ((KUBECONFIG))
        # Remove overly generous resource request to avoid unnecessarily scaling up k8s nodes
        RESOURCES_FLAGS: "--set global.resources.requests.cpu=0m --set resources.requests.cpu=0 --set resources.requests.memory=0 --set global.proxy.resources.requests.cpu=0 --set global.proxy.resources.requests.memory=0"
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml

            kubectl delete namespace istio-system --ignore-not-found
            kubectl apply -k istio-installer/crds
            kubectl apply -k istio-installer/test/demo
    
  - name: test-after-install
    serial_groups: [ cluster ]
    plan:
    - get: istio-installer
      passed: [ install ]
      trigger: true
    - get: istio-master
      trigger: false
    - get: 24h
      trigger: true
      passed: [install]
    - task: install-bookinfo
      params:
        KUBECONFIG: ((KUBECONFIG))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-master
            path: src/github.com/istio/istio
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml
            ISTIO_CONTROL=istio-system INGRESS_NS=istio-system istio-installer/bin/test.sh --skip-cleanup src/github.com/istio/istio/

  - name: update-kustomize-templates
    plan:
    - get: istio-installer
      trigger: true
    - task: update-kustomize-templates
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        params:
          GITHUB_ACCESS_TOKEN: ((GITHUB_ACCESS_TOKEN))
          CONCOURSE_WDF_PASSWORD: ((CONCOURSE_WDF_PASSWORD))
        inputs:
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            git config --global credential.helper 'store
            echo "https://ConcourseWdf:${CONCOURSE_WDF_PASSWORD}@github.com" > ~/.git-credentials
            set -x
            cd istio-installer
            make run-build
            if ! git diff --exit-code >/dev/null ; then
              BRANCH_NAME="update-kustomize-$(git rev-parse HEAD)"
              git config --global user.email "public@holger-oehm.de"
              git config --global user.name "ConcourseWdf"
              git checkout -b "$BRANCH_NAME"
              git commit -a -m "Update kustomize templates."
              git remote add c0d1ngm0nk3y "https://github.com/c0d1ngm0nk3y/istio-installer.git"
              git push -u c0d1ngm0nk3y $BRANCH_NAME:$BRANCH_NAME
              curl -X POST -H 'Content-type: application/json' \
                -d "{  \"title\": \"Update kustomize templates\", \"body\": \"This PR is created automatically!\", \"head\": \"c0d1ngm0nk3y:$BRANCH_NAME\", \"base\": \"master\" } " \
                -H "Authorization: token $GITHUB_ACCESS_TOKEN" \
                -H 'Content-Type: application/json' \
                -H 'Accept: application/vnd.github.v3+json' \
                -w %{http_code} -o /dev/null -s \
                https://api.github.com/repos/istio/installer/pulls
              if [ "$HTTP_CODE" -ne 201 ]; then
                echo "No pull request created"
                exit 1
              fi
            fi
